# Quizás sea necesario instalar alguna(s) de las siguientes librerías:
library(readxl) # Requiere java
library(dplyr)
library(lubridate)
library(ggplot2)
library(sqldf)
# Directorio de trabajo
setwd("~/Actuaría/GitHub/R_Actuarial/Programación General/R + Python + SQL en RStudio/Examen Consultor Sr")
setwd("~/Actuaría/GitHub/R_Actuarial/Programación General/R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr")
reticulate::repl_python()
import pandas as pd
# a) Importar los datos
ruta = "C://Users/alarc/Documents/Actuaría/GitHub/R_Actuarial/Programación General/R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr/Datos/Nombres.txt"
datos = pd.read_csv(ruta,
sep="|",encoding=("UTF-8"))
quit
# Quizás sea necesario instalar alguna(s) de las siguientes librerías:
library(readxl) # Requiere java
library(dplyr)
library(lubridate)
library(ggplot2)
library(sqldf)
# Directorio de trabajo
setwd("~/Actuaría/GitHub/R_Actuarial/Programación General/R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr")
# Quizás sea necesario instalar alguna(s) de las siguientes librerías:
library(readxl) # Requiere java
library(dplyr)
library(lubridate)
library(ggplot2)
library(sqldf)
# Directorio de trabajo
setwd("~/Actuaría/GitHub/R_Actuarial/Programación General/R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr")
# Quizás sea necesario instalar alguna(s) de las siguientes librerías:
library(readxl) # Requiere java
library(dplyr)
library(lubridate)
library(ggplot2)
library(sqldf)
# Directorio de trabajo
setwd("~/Actuaría/GitHub/R_Actuarial/Programación General/R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr")
setwd("~/Actuaría/GitHub/R_Actuarial/Programación General/R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr/Scripts de apoyo")
knitr::opts_chunk$set(message = FALSE,warning = FALSE)
# Propias de R:
library(readxl) # Requiere java
library(dplyr)
library(lubridate)
library(ggplot2)
# Para SQL:
library(sqldf)
# Para Python:
library(reticulate)
# Del GitHub personal del autor:
directorio = "C:/Users/alarc/Documents/Actuaría/GitHub/R_Actuarial/Programación General/"
carpeta = "R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr/Scripts de apoyo/"
archivo = "Funciones_RMD.R"
ruta = paste(directorio,carpeta,archivo)
# Propias de R:
library(readxl) # Requiere java
library(dplyr)
library(lubridate)
library(ggplot2)
# Para SQL:
library(sqldf)
# Para Python:
library(reticulate)
# Del GitHub personal del autor:
directorio = "C:/Users/alarc/Documents/Actuaría/GitHub/R_Actuarial/Programación General/"
carpeta = "R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr/Scripts de apoyo/"
archivo = "Funciones_RMD.R"
ruta = paste(directorio,carpeta,archivo)
source(ruta)
ruta
# Propias de R:
library(readxl) # Requiere java
library(dplyr)
library(lubridate)
library(ggplot2)
# Para SQL:
library(sqldf)
# Para Python:
library(reticulate)
# Del GitHub personal del autor:
directorio = "C:/Users/alarc/Documents/Actuaría/GitHub/R_Actuarial/Programación General/"
carpeta = "R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr/Scripts de apoyo/"
archivo = "Funciones_RMD.R"
ruta = paste0(directorio,carpeta,archivo)
source(ruta)
install.packages("kableExtra")
py_install("string")
py_install("unidecode")
py_install("openpyxl")
py$datos_consonantes %>% head()
reticulate::repl_python()
import pandas as pd
directorio = "C://Users/alarc/Documents/Actuaría/GitHub/R_Actuarial/Programación General/"
carpeta = "R + Python + SQL + LaTeX en RStudio/Examen Consultor Sr/Datos/"
archivo = "Nombres.txt"
ruta = directorio + carpeta + archivo
# Se guarda en el objeto "datos"
datos = pd.read_csv(ruta,sep="|",encoding=("UTF-8"))
# Asumiremos que también se deben quitar las mayúsculas con el objetivo de tener monotonía.
# Nombre
import string
simbolos = str.maketrans('', '', string.punctuation)
datos["Nombre"] = datos["Nombre"].str.translate(simbolos)
datos["Nombre"] = datos["Nombre"].str.replace(" ","")
datos["Nombre"] = datos["Nombre"].str.lower()
import unidecode
datos["Nombre"] = datos["Nombre"].apply(unidecode.unidecode)
# Apellido
datos["Apellido"] = datos["Apellido"].str.translate(simbolos)
datos["Apellido"] = datos["Apellido"].str.replace(" ","")
datos["Apellido"] = datos["Apellido"].str.lower()
datos["Apellido"] = datos["Apellido"].apply(unidecode.unidecode)
datos["First"] = datos["Apellido"].str[0]
datos_consonantes = datos[~(datos.First.isin(["a","e","i","o","u"]))]
datos_agrupado = datos_consonantes.groupby(["Nombre","Apellido","Id"]).sum()[["Saldo"]].reset_index()
quit
py$datos_consonantes %>% head()
aux <- py$datos_consonantes
aux
aux <- py$datos_agrupado
aux
dollar(aux$Saldo)
scales::dollar(aux$Saldo)
