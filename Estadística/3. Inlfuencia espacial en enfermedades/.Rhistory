{
readline("Hola")
readline("Hola")
}
y=readline("Adiós")
curve(pnorm(x))
curve(pnorm(x),from=-5,to=5)
curve(pnorm(x),from=-5,to=5,lwd=2)
curve(pnorm(x),from=-5,to=5,lwd=2,col="red")
curve(pnorm(x),from=-5,to=5,lwd=2,col="red",main="Distribucipón Normal")
curve(pnorm(x),from=-5,to=5,lwd=2,col="red",main="Distribución Normal")
curve(log(1,base = x))
curve(log(1,base = x),from=0,to=5)
curve(log(2,base = x),from=0,to=5)
curve(pbinom(x,size = 10,prob = 0.5),from=0,to=10)
1:(n+m)
# Vamos a crear una matriz con 'n' renglones y 'm' columnas
n = 5 ; m = 3
1:(n+m)
1:(n*m)
M <- matrix(data = 1:(n*m), # Los datos de entrada para la matriz.
nrow=n,ncol=m)  # Para definir la dimensión de la matriz
M
M <- matrix(data = 1:(n*m), # Los datos de entrada para la matriz.
byrow = TRUE,
nrow=n,ncol=m)  # Para definir la dimensión de la matriz
M
y <- M[2,2]
y
M[4,1] <- 20
M
M[3,] # Pasar todo el tercer renglón
y<-M[4,]
y
y
y[1]
y[3]
M[,2]
# Objetivo, extraer la segunda columna.
z<-M[,2]
z[3] == M[1,3]
M[1,3]
M
z[3] == M[3,2]
z<-M[,2]
z[3]
M[3,2]
z[3] == M[3,2]
z[3]
M[3,2]
z[3]
z<-M[,2]
z
M
z
z[3]
M[3,2]
M
M[1,1]
M[1,2]
c(M[1,1],M[1,2])
#5. Objetivo, extraer el vector c(1,2) de la matriz
r<-c(M[1,1],M[1,2])
r
M[1,1:2]
x <- 1:10
x <- -10:10
x[1:3]
x[1:3]
x[4:6]
M[1,1:2]
M[1:2,1:2]
x
x[-1]
x[-1:5]
x[-c(1:5)]
M[,-2]
M[,c(1,3)]
A <- matrix(1:4,2,2)
A
B <- matrix(c(1,2,1,3),2,2)
B
A <- matrix(1:4,2,2)
A
B <- matrix(c(1,2,1,3),2,2)
B
B <- matrix(c(1,2,1,3),2,2)
B <- matrix(c(1,2,1,3),2,2)
A <- matrix(1:4,2,2)
t(A)
t(B)
B
a <- diag(A)
a
A
# Extraer la diagonal de una matriz
a <- diag(A)
a
b <- diag(B)
b
diag(A)
diag(a)
diag(A)
diag(a)
A
A-diag(a)
A
A
diag(a)
diag(A)
diag(diag(A))
A-diag(diag(A))
A
diag(diag(A))
A
B
A + B
A - B
A * B
A %*% B # Multiplicación matricial
A / B
v <- c(1,2)
v
A
A
v
v + A
v*A
A*v
C <- matrix(1:6,2,3)
C
v + C
C <- matrix(1:6,3,2)
C
v + C
A
v
v%*%A
A%*%v
det(A)
A^-1
solve(A)
A %*% solve(A)
M <- matrix(c(1,4,1,2),2,2)
M
b <- c(540,1442)
M
colnames(M) <- c("Vacas","Pollos")
rownames(M) <- c("Cabezas","Patas")
M
names(b) = c("Cabezas","Patas")
b
X <- solve(M) %*% b
X
sum(X)
2*X["Pollos",] + 4*X["Vacas",]
solve(M,b)
2*X["Pollos"]
X
2*X["Pollos",1] + 4*X["Vacas",1]
as.vector(X)
N <- matrix(c(1,2,1,2),2,2)
N
X
as.vector(X)
x<-as.vector(X)
x[1]
det(N)
solve(N)
N <- matrix(c(1,2,1,1.9999),2,2)
N
det(N)
solve(N)
N <- matrix(c(1,2,1,1.9999999),2,2)
det(N)
solve(N)
N <- matrix(c(1,2,1,1.9999999999),2,2)
det(N)
solve(N)
N <- matrix(c(1,2,1,1.999999999999999),2,2)
det(N)
solve(N)
letras <- c("a","b","c","d","e","f","g","h","i")
# Arrays: los podemos pensar como matrices de dimensiones mayores o las que queramos.
letras <- c("a","b","c","d","e","f","g","h","i")
length(letras)
letras <- rep(letras,3)
letras
y <- array(data = letras,dim = c(3,3,3))
y
a[1,1,]
y[1,1,]
y[2,2,]
z <- array(data = 1:27,dim(3,3,3))
z <- array(data = 1:27,dim = c(3,3,3))
z
z[2,1,2:3]
y
z
y[2,1,2:3]
z[2,1,2:3]
z +10
info <- c(1,3,3,3,2,1,1,1)
info <- c(1,3,3,3,2,1,1,1)
info
info / 2
diag(A)
diag(a)
f_info <- factor(info)
f_info
class(f_info)
f_info * 2
as.numeric(f_info)
as.numeric(f_info)
f_info
levels(f_info)
# as.numeric(f_info) ("los puedes pasar a números")
levels(f_info) <- c("PRI","PAN","MORENA") # QUIERO CODIFICAR.
f_info
barplot(f_info)
barplot(table(f_info))
barplot(table(f_info),col=c("red","azul","orange"))
barplot(table(f_info),col=c("red","blue","orange"))
table(f_info)
f_info
table(f_info)
class(info)
info
class(info)
f_info
class(f_info)
summary(info)
summary(f_info)
barplot(c(4,1,3),col=c("red","blue","orange"))
barplot(c(PRI=4,1,3),col=c("red","blue","orange"))
table(f_info)
summary(f_info)
setwd("~/Actuaría/GitHub/R_Actuarial/Estadística/3. Inlfuencia espacial en enfermedades")
fit74_2<-lagsarlm(rr74 ~ BIR74, data=nc,
nb2listw(sids.vecinos, style="W"), method="eigen", quiet=TRUE)
library(sf)
library(tmap)
library(sp)
library(spdep)
library(maptools)
library(RColorBrewer)
library(tripack)
library(spatialreg)
library(glmmfields)
library(ggplot2)
library(dplyr)
nc <- st_read("sids.shp")
# Analisis exploratorio ---------------------------------------------------
nc$both <- factor(paste(nc$L_id, nc$M_id, sep=":"))
# Graficamos California del Norte con el ID alfabético por condado
plot(st_geometry(nc), axes=TRUE, main = "Mapa de condados de California del Norte")
nc <- st_read("sids.shp")
# Analisis exploratorio ---------------------------------------------------
nc$both <- factor(paste(nc$L_id, nc$M_id, sep=":"))
# Graficamos California del Norte con el ID alfabético por condado
plot(st_geometry(nc), axes=TRUE, main = "Mapa de condados de California del Norte")
text(st_coordinates(st_centroid(st_geometry(nc), of_largest_polygon=TRUE)), label=nc$CRESS_ID, cex=1)
#Graficamos la relación de Vecinos (nivel 1)
nc.condados<-readShapeSpatial("sids.shp",ID="CRESS_ID")
sids.vecinos <- poly2nb(nc.condados)
plot(sids.vecinos,coordinates(nc.condados),col="blue",pch=".")
plot(nc.condados,add=T, border="darkgrey")
text(st_coordinates(st_centroid(st_geometry(nc), of_largest_polygon=TRUE)), label=nc$CRESS_ID, cex=1)
title(main = "Relación de vecinos por condado")
#Mapa de probabilidades 74
ch <- choynowski(nc$SID74, nc$BIR74)
nc$ch_pmap_low <- ifelse(ch$type, ch$pmap, NA)
nc$ch_pmap_high <- ifelse(!ch$type, ch$pmap, NA)
prbs <- c(0,0.01,.05,1)
nc$high74 = cut(nc$ch_pmap_high, prbs)
nc$low74 = cut(nc$ch_pmap_low,prbs )
#Mapa de probabilidades 79
ch <- choynowski(nc$SID79, nc$BIR79)
nc$ch_pmap_low <- ifelse(ch$type, ch$pmap, NA)
nc$ch_pmap_high <- ifelse(!ch$type, ch$pmap, NA)
prbs <- c(0,0.01,.05,1)
nc$high79 = cut(nc$ch_pmap_high, prbs)
nc$low79 = cut(nc$ch_pmap_low,prbs )
tm_shape(nc) + tm_fill(c("low74", "high74","low79", "high79"), palette="YlOrRd", title="p-values") +
tm_layout(main.title = "Choynowski", main.title.position = "center") +
tm_facets(free.scales=FALSE) + tm_layout(panel.labels=c("Grupo Bajo (1974-1978)", "Grupo Alto (1974-1978)","Grupo Bajo (1979-1984)", "Grupo Alto (1979-1984)")) +
tm_text("CRESS_ID", size = 0.6)
pmap <- probmap(nc$SID74, nc$BIR74)
nc$pmap <- pmap$pmap
brks <- c(0,0.001,0.01,0.025,0.05,0.95,0.975,0.99,0.999,1)
tm_shape(nc) +
tm_layout(main.title = "Mapa de probabilidades", main.title.position = "center") +
tm_fill("pmap", breaks=brks, midpoint=0.5, palette="RdBu") + tm_layout(legend.outside=TRUE) +
tm_text("CRESS_ID", size = 0.6)
#Muertes esperadas por condado para 74 y 79
global_rate74 <- sum(nc$SID74)/sum(nc$BIR74)
global_rate79 <- sum(nc$SID79)/sum(nc$BIR79)
nc$Expected74 <- global_rate74 * nc$BIR74
nc$Expected79 <- global_rate79 * nc$BIR79
#(Pregunta 1)
nc$rr74 <- (nc$SID74/nc$BIR74)/(sum(nc$SID74)/sum(nc$BIR74))
nc$rr79 <- (nc$SID79/nc$BIR79)/(sum(nc$SID79)/sum(nc$BIR79))
ks.test((nc$rr74), (nc$rr79))
#(pregunta 2) Cociende de RR
nc$or <- ifelse((nc$rr74 ==0 & nc$rr79 ==0), 1, (nc$rr74+0.5)/(nc$rr79+0.5))
brks <- c(0, 0.25, 0.75, 1.25, 2, Inf)
tm_shape(nc) +
tm_layout(main.title = "Cociente de riesgos relativos", main.title.position = "center") +
tm_fill("or", breaks = brks, midpoint=1, palette="RdBu") + tm_layout(legend.outside=TRUE) +
tm_text("CRESS_ID", size = 0.8)
fit74_1 <- glm(SID74 ~ offset(log(BIR74)), data=nc, family="poisson")
nc$rr74fitns <- fit74_1$fitted.values/nc$Expected74
nc$res74ns <- (nc$rr74 - nc$rr74fitns)
fit74_1$fitted.values
exp(log(nc$BIR74)+fit74_1$coefficients)
nc$BIR74*sum(nc$SID74)/sum(nc$BIR74)
mean(nc$Expected74)
mean(fit74_1$fitted.values)
fit74_1$coefficients
log(sum(nc$SID74)/sum(nc$BIR74))
fit79_1 <- glm(SID79 ~ offset(log(BIR79)), data=nc, family="poisson")
nc$rr79fitns <- fit79_1$fitted.values/nc$Expected79
nc$res79ns <- (nc$rr79 - nc$rr79fitns)
brks <- c(-Inf, -1:3, Inf)
tm_shape(nc) +
tm_fill(c("res74ns" , "res79ns"), breaks = brks, title = c("Res. 74" , "Res. 79"), midpoint=0, palette="RdBu") +
tm_layout(legend.outside=TRUE) +
tm_layout(main.title = "Residuales del RR a partir de un modelo Poisson", main.title.position = "center") +
tm_text("CRESS_ID", size = 0.6) +
tm_layout(panel.labels=c("1974-1978", "1979-1984"))
ncs <- as(nc, "Spatial")
w <- poly2nb(ncs, row.names=ncs$FIPSNO)
summary(w)
# creamos la matriz cuadrada de pesos
wm <- nb2mat(w, style='B',zero.policy=TRUE)
dim(wm)
image(wm)
rwm <- mat2listw(wm, style='W')
any(is.na(rwm$weights))
## Calculamos el indice de Moran para los residuos
library(ape)
# H0: Independencia (no correlacionados)
mora <- Moran.I(nc$res74ns, weight = wm,na.rm = TRUE)
mora$p.value
mora <- Moran.I(nc$res79ns, weight = wm,na.rm = TRUE)
mora$p.value
fit74_2<-lagsarlm(rr74 ~ BIR74, data=nc,
nb2listw(sids.vecinos, style="W"), method="eigen", quiet=TRUE)
summary(fit74_2)
fit79_2<-lagsarlm(rr79 ~ BIR79, data=nc,
nb2listw(sids.vecinos, style="W"), method="eigen", quiet=TRUE)
summary(fit79_2)
#Graficamos la relación de Vecinos (nivel 1)
nc.condados<-readShapeSpatial("sids.shp",ID="CRESS_ID")
sids.vecinos <- poly2nb(nc.condados)
plot(sids.vecinos,coordinates(nc.condados),col="blue",pch=".")
plot(nc.condados,add=T, border="darkgrey")
text(st_coordinates(st_centroid(st_geometry(nc), of_largest_polygon=TRUE)), label=nc$CRESS_ID, cex=1)
title(main = "Relación de vecinos por condado")
#Mapa de probabilidades 74
ch <- choynowski(nc$SID74, nc$BIR74)
nc$ch_pmap_low <- ifelse(ch$type, ch$pmap, NA)
nc$ch_pmap_high <- ifelse(!ch$type, ch$pmap, NA)
prbs <- c(0,0.01,.05,1)
nc$high74 = cut(nc$ch_pmap_high, prbs)
nc$low74 = cut(nc$ch_pmap_low,prbs )
#Mapa de probabilidades 79
ch <- choynowski(nc$SID79, nc$BIR79)
nc$ch_pmap_low <- ifelse(ch$type, ch$pmap, NA)
nc$ch_pmap_high <- ifelse(!ch$type, ch$pmap, NA)
prbs <- c(0,0.01,.05,1)
nc$high79 = cut(nc$ch_pmap_high, prbs)
nc$low79 = cut(nc$ch_pmap_low,prbs )
tm_shape(nc) + tm_fill(c("low74", "high74","low79", "high79"), palette="YlOrRd", title="p-values") +
tm_layout(main.title = "Choynowski", main.title.position = "center") +
tm_facets(free.scales=FALSE) + tm_layout(panel.labels=c("Grupo Bajo (1974-1978)", "Grupo Alto (1974-1978)","Grupo Bajo (1979-1984)", "Grupo Alto (1979-1984)")) +
tm_text("CRESS_ID", size = 0.6)
pmap <- probmap(nc$SID74, nc$BIR74)
nc$pmap <- pmap$pmap
brks <- c(0,0.001,0.01,0.025,0.05,0.95,0.975,0.99,0.999,1)
tm_shape(nc) +
tm_layout(main.title = "Mapa de probabilidades", main.title.position = "center") +
tm_fill("pmap", breaks=brks, midpoint=0.5, palette="RdBu") + tm_layout(legend.outside=TRUE) +
tm_text("CRESS_ID", size = 0.6)
#Muertes esperadas por condado para 74 y 79
global_rate74 <- sum(nc$SID74)/sum(nc$BIR74)
global_rate79 <- sum(nc$SID79)/sum(nc$BIR79)
nc$Expected74 <- global_rate74 * nc$BIR74
nc$Expected79 <- global_rate79 * nc$BIR79
#(Pregunta 1)
nc$rr74 <- (nc$SID74/nc$BIR74)/(sum(nc$SID74)/sum(nc$BIR74))
nc$rr79 <- (nc$SID79/nc$BIR79)/(sum(nc$SID79)/sum(nc$BIR79))
ks.test((nc$rr74), (nc$rr79))
#(pregunta 2) Cociende de RR
nc$or <- ifelse((nc$rr74 ==0 & nc$rr79 ==0), 1, (nc$rr74+0.5)/(nc$rr79+0.5))
brks <- c(0, 0.25, 0.75, 1.25, 2, Inf)
tm_shape(nc) +
tm_layout(main.title = "Cociente de riesgos relativos", main.title.position = "center") +
tm_fill("or", breaks = brks, midpoint=1, palette="RdBu") + tm_layout(legend.outside=TRUE) +
tm_text("CRESS_ID", size = 0.8)
fit74_1 <- glm(SID74 ~ offset(log(BIR74)), data=nc, family="poisson")
nc$rr74fitns <- fit74_1$fitted.values/nc$Expected74
nc$res74ns <- (nc$rr74 - nc$rr74fitns)
fit74_1$fitted.values
exp(log(nc$BIR74)+fit74_1$coefficients)
nc$BIR74*sum(nc$SID74)/sum(nc$BIR74)
mean(nc$Expected74)
mean(fit74_1$fitted.values)
fit74_1$coefficients
log(sum(nc$SID74)/sum(nc$BIR74))
fit79_1 <- glm(SID79 ~ offset(log(BIR79)), data=nc, family="poisson")
nc$rr79fitns <- fit79_1$fitted.values/nc$Expected79
nc$res79ns <- (nc$rr79 - nc$rr79fitns)
brks <- c(-Inf, -1:3, Inf)
tm_shape(nc) +
tm_fill(c("res74ns" , "res79ns"), breaks = brks, title = c("Res. 74" , "Res. 79"), midpoint=0, palette="RdBu") +
tm_layout(legend.outside=TRUE) +
tm_layout(main.title = "Residuales del RR a partir de un modelo Poisson", main.title.position = "center") +
tm_text("CRESS_ID", size = 0.6) +
tm_layout(panel.labels=c("1974-1978", "1979-1984"))
ncs <- as(nc, "Spatial")
w <- poly2nb(ncs, row.names=ncs$FIPSNO)
summary(w)
# creamos la matriz cuadrada de pesos
wm <- nb2mat(w, style='B',zero.policy=TRUE)
dim(wm)
image(wm)
fit74_2<-lagsarlm(rr74 ~ BIR74, data=nc,
nb2listw(sids.vecinos, style="W"), method="eigen", quiet=TRUE)
summary(fit74_2)
sids.vecinos
nb2listw(sids.vecinos, style="W")
nb2listw(sids.vecinos, style="W")
fit74_2<-lagsarlm(rr74 ~ BIR74, data=nc,
nb2listw(sids.vecinos, style="W"), method="eigen", quiet=TRUE)
summary(fit74_2)
