all(R_query0==SQL_query0) # Son idénticas.
# Usando dplyr
tbl_estadio %>%
inner_join(tbl_equipo_estadio,by = "id_estadio") %>%
inner_join(y = tbl_equipo, by = "id_equipo") %>%
arrange(id_equipo) -> dplyr_query0
df_dplyr_query0 <- as.data.frame(dplyr_query0)
View(df_dplyr_query0)
# Muestra el query
dplyr_query0 %>% show_query()
# Explica el query
dplyr_query0 %>% explain()
# Usando el show_query.
dbGetQuery(conexion,
'
SELECT *
FROM (SELECT "id_estadio", "nombre_estadio", "capacidad", "grama", "condicion", "anyo_construccion", "id_ciudad", "LHS"."id_equipo" AS "id_equipo", "proyecto_nuevo", "nombre_equipo", "nickname_equipo", "division", "conferencia", "record_g", "record_p", "record_e", "anyo_fund"
FROM (SELECT "LHS"."id_estadio" AS "id_estadio", "nombre_estadio", "capacidad", "grama", "condicion", "anyo_construccion", "id_ciudad", "id_equipo", "proyecto_nuevo"
FROM "estadio" AS "LHS"
INNER JOIN "equipo_estadio" AS "RHS"
ON ("LHS"."id_estadio" = "RHS"."id_estadio")
) "LHS"
INNER JOIN "equipo" AS "RHS"
ON ("LHS"."id_equipo" = "RHS"."id_equipo")
) "q01"
ORDER BY "id_equipo"
') -> SQLshow_query0
View(SQLshow_query0)
# Comparativa:
dim(R_query0)
dim(SQL_query0)
dim(df_dplyr_query0)
dim(SQLshow_query0)
all(names(R_query0) %in% names(df_dplyr_query0))
all(names(SQL_query0) %in% names(SQLshow_query0))
all(R_query0==df_dplyr_query0[,names(R_query0)]) # Son idénticas.
all(SQL_query0==SQLshow_query0[,names(SQL_query0)]) # Son idénticas.
library(DBI)
?odbcListObjects
dbListObjects(conexion)
dbListObjects(conexion)
dbListTables(conexion)
dbListFields(conexion)
db_list_tables(conexion)
dbListResults(conexion)
# Vamos a ver todas las tablas de la base:
dbListTables(conexion)
# Usando dplyr
tbl_estadio %>%
inner_join(tbl_equipo_estadio,by = "id_estadio") %>%
inner_join(y = tbl_equipo, by = "id_equipo") %>%
arrange(id_equipo) -> dplyr_query0
dplyr_query0
df_dplyr_query0 <- collect(dplyr_query0)
View(df_dplyr_query0)
df_dplyr_query0 <- as.data.frame(dplyr_query0)
class(df_dplyr_query0)
df_dplyr_query0 <- as.data.frame(dplyr_query0)
df_dplyr_query0
# Muestra el query
dplyr_query0 %>% collect() %>% show_query()
# Muestra el query
dplyr_query0 %>% show_query()
# Usamos la función collect para "descargar" el query
df_dplyr_query0 <- collect(dplyr_query0)
View(df_dplyr_query0)
df_dplyr_query0
# Fijar el directorio de trabajo donde están los datos:
setwd("~/Actuaría/Docencia/AMAT/R Intermedio/_Datos e Instalaciones/SQL/datos")
# Librerías ---------------------------------------------------------------
library(RPostgreSQL)
library(DBI)
# NFL ---------------------------------------------------------------------
drv <- dbDriver("PostgreSQL")
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "TU CONTRASEÑA")
# Librerías ---------------------------------------------------------------
library(RPostgreSQL)
library(DBI)
# NFL ---------------------------------------------------------------------
drv <- dbDriver("PostgreSQL")
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "morfina")
# Debemos verificar que estos sean TRUE:
dbExistsTable(conexion, "equipo")
# Librerías ---------------------------------------------------------------
library(RPostgreSQL)
library(DBI)
# NFL ---------------------------------------------------------------------
drv <- dbDriver("PostgreSQL")
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "morfina")
# Debemos verificar que estos sean TRUE:
dbExistsTable(conexion, "equipo")
bawr <- dbGetQuery(conexion,"SELECT * FROM equipo")
View(bawr)
View(equipo)
View(equipo)
View(equipo)
View(estadio)
dbListTables(conexion)
library(dplyr)
NFL <- list()
dbListTables(conexion)
dbListTables(conexion)
# Invocar todas las tablas
NFL <- list()
for(tabla in dbListTables(conexion)){
NFL[[tabla]] <- dbGetQuery(conexion,paste("SELECT * FROM ",tabla))
}
View(NFL$entrenador)
View(NFL$entrenador)
NFL <- list()
for(tabla in dbListTables(conexion)){
NFL[[tabla]] <- dbGetQuery(conexion,paste("SELECT * FROM ",tabla))
}
paste("SELECT * FROM ",tabla)
paste("SELECT * FROM ",tabla)
# NFL ---------------------------------------------------------------------
drv <- dbDriver("PostgreSQL")
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "morfina")
# Debemos verificar que estos sean TRUE:
dbExistsTable(conexion, "equipo")
# Vamos a crear una tabla de la base
equipo <- dbGetQuery(conexion,"SELECT * FROM equipo")
# Vamos a ver todas las tablas que tiene la base de datos:
dbListTables(conexion)
# Invocar la librería
library(dplyr)
# Invocar todos los elementos de todas las tablas
NFL <- list()
for(tabla in dbListTables(conexion)){
NFL[[tabla]] <- dbGetQuery(conexion,paste("SELECT * FROM ",tabla))
}
# Librerías ---------------------------------------------------------------
library(RPostgreSQL)
library(DBI)
# NFL ---------------------------------------------------------------------
drv <- dbDriver("PostgreSQL")
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "morfina")
# Debemos verificar que estos sean TRUE:
dbExistsTable(conexion, "equipo")
dbDisconnect(conexion)
dbUnloadDriver(drv)
# Vamos a crear una tabla de la base
equipo <- dbGetQuery(conexion,"SELECT * FROM equipo")
# NFL ---------------------------------------------------------------------
drv <- dbDriver("PostgreSQL")
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "morfina")
# Debemos verificar que estos sean TRUE:
dbExistsTable(conexion, "equipo")
# Vamos a crear una tabla de la base
equipo <- dbGetQuery(conexion,"SELECT * FROM equipo")
equipo
# NFL ---------------------------------------------------------------------
drv <- dbDriver("PostgreSQL")
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "morfina")
# Debemos verificar que estos sean TRUE:
dbExistsTable(conexion, "equipo")
# Vamos a crear una tabla de la base
equipo <- dbGetQuery(conexion,"SELECT * FROM equipo")
equipo
# Vamos a ver todas las tablas que tiene la base de datos:
dbListTables(conexion)
# Invocar la librería
library(dplyr)
# Invocar todos los elementos de todas las tablas
NFL <- list()
for(tabla in dbListTables(conexion)){
NFL[[tabla]] <- dbGetQuery(conexion,paste("SELECT * FROM ",tabla))
}
# Ejemplo para ver que sí se hizo la carga
View(NFL$entrenador)
NFL_tbl <- list()
NFL_tbl <- list()
paste0("tbl_",tabla)
NFL_tbl <- list()
for(tabla in dbListTables(conexion)){
NFL_tbl[[paste0("tbl_",tabla)]] <- tbl(conexion,tabla)
}
NFL_tbl$tbl_entrenador
library(dplyr)
library(dbplyr)
library(dplyr)
library(dbplyr)
?tbl
NFL_tbl$tbl_entrenador
NFL_tbl$tbl_entrenador
NFL_tbl$tbl_equipo_entrenador
NFL_tbl <- list()
NFL_tbl
conexion <- dbConnect(drv, dbname = "NFL",
#Se especifíca el puerto:
host = "localhost", port = 5432,
#Se especifican el usuario y contraseña
user = "postgres", # Este no cambia.
password = "morfina")
# Para cargar las tablas en objetos tibble.
NFL_tbl <- list()
for(tabla in dbListTables(conexion)){
NFL_tbl[[paste0("tbl_",tabla)]] <- tbl(conexion,tabla)
}
conexion
NFL_tbl <- list()
for(tabla in dbListTables(conexion)){
NFL_tbl[[paste0("tbl_",tabla)]] <- tbl(conexion,tabla)
}
library(dplyr)
library(dbplyr)
NFL_tbl$tbl_equipo_entrenador
attach(NFL)
attach(NFL)
attach(NFL_tbl)
NFL
NFL_tbl
View(entrenador)
tbl_entrenador
View(estadio)
View(equipo)
View(equipo_estadio)
equipo %>%
merge(equipo_estadio)
# Ejemplo básico de cruces
equipo %>%
merge(equipo_estadio,by = "id_equipo")
equipo %>%
merge(equipo_estadio,by = "id_equipo")
equipo %>%
merge(equipo_estadio,by = "id_equipo") %>%
merge(estadio,by = "id_estadio")
equipo %>%
merge(equipo_estadio,by = "id_equipo") %>%
merge(estadio,by = "id_estadio") -> R_query0
View(R_query0)
# Ejemplo básico de cruces
equipo %>%
merge(equipo_estadio,by = "id_equipo") %>%
merge(estadio,by = "id_estadio") %>%
arrange(id_equipo) -> R_query0
View(R_query0)
R_query0
dbGetQuery(conexion,
"
SELECT *
FROM equipo NATURAL JOIN equipo_estadio
NATURAL JOIN estadio
ORDER BY id_equipo
") -> SQL_query0
View(SQL_query0)
dim(equipo)
dim(R_query0)
dim(estadio)
dim(R_query0)
dim(SQL_query0)
names(R_query0)
names(SQL_query0)
all(names(R_query0)==names(SQL_query0))
names(R_query0)
names(SQL_query0)
all(R_query0==SQL_query0)
tbl_equipo_estadio
tbl_estadio %>%
inner_join(tbl_equipo_estadio)
# Utilizando la librería dplyr - tidyverse
tbl_estadio %>%
inner_join(tbl_equipo_estadio,by = "id_estadio") %>%
inner_join(tbl_equipo,by="id_equipo")
# Utilizando la librería dplyr - tidyverse
tbl_estadio %>%
inner_join(tbl_equipo_estadio,by = "id_estadio") %>%
inner_join(tbl_equipo,by="id_equipo") %>%
arrange(id_equipo)
tbl_estadio %>%
inner_join(tbl_equipo_estadio,by = "id_estadio") %>%
inner_join(tbl_equipo,by="id_equipo") %>%
arrange(id_equipo) -> dplyr_query
dplyr_query
dplyr_query
dplyr_query
dplyr_query %>% show_query()
dplyr_query
tbl_dplyr_query <- dplyr_query %>% collect()
View(dplyr_query)
View(tbl_dplyr_query)
df_dplyr_query <- dplyr_query %>% as.data.frame()
View(df_dplyr_query)
dplyr_query %>% show_query()
dplyr_query %>% show_query()
dplyr_query %>% show_query()
"Hola"
print("Hola")
cat("Hola")
"Hola"
cat('"Hola"')
'"Hola"'
# Usemos el show_query con la función dbGetQuery
dbGetQuery(conexion,
'
SELECT *
FROM (SELECT "id_estadio", "nombre_estadio", "capacidad", "grama", "condicion", "anyo_construccion", "id_ciudad", "LHS"."id_equipo" AS "id_equipo", "proyecto_nuevo", "nombre_equipo", "nickname_equipo", "division", "conferencia", "record_g", "record_p", "record_e", "anyo_fund"
FROM (SELECT "LHS"."id_estadio" AS "id_estadio", "nombre_estadio", "capacidad", "grama", "condicion", "anyo_construccion", "id_ciudad", "id_equipo", "proyecto_nuevo"
FROM "estadio" AS "LHS"
INNER JOIN "equipo_estadio" AS "RHS"
ON ("LHS"."id_estadio" = "RHS"."id_estadio")
) "LHS"
INNER JOIN "equipo" AS "RHS"
ON ("LHS"."id_equipo" = "RHS"."id_equipo")
) "q01"
ORDER BY "id_equipo"
')
?inner_join
View(estadio)
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipoo,by = "id_equipo")
# 1. Los nombres de los equipos cuyo estadio tiene condición excelente o buena
#    ordenados por orden alfabético.
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo")
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(nombre_equipo,condicion)
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion)
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion) %>%
View()
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion) %>%
filter(Condición%in%c("Excelente","Buena"))
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion)
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo")
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion) %>%
filter(Condición%in%c("Excelente","Buena"))
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion) %>%
filter(Condición%in%c("Excelente","Buena")) %>%
arrange(Equipo)
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion) %>%
filter(Condición%in%c("Excelente","Buena")) %>%
arrange(Equipo) -> R_query1
tbl_estadio %>%
inner_join(tbl_equipo_estadio,by = "id_estadio") %>%
inner_join(tbl_equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion) %>%
filter(Condición%in%c("Excelente","Buena")) %>%
arrange(Equipo) -> dplyr_query1
show_query(dplyr_query1)
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
dplyr::select(Equipo=nombre_equipo,Condición=condicion) %>%
filter(Condición%in%c("Excelente","Buena")) %>%
arrange(Equipo) -> R_query1
show_query(dplyr_query1)
show_query(dplyr_query1)
show_query(dplyr_query1)
dbGetQuery(conexion,
"
SELECT nombre_equipo AS Equipo, condicion AS Condicion
FROM equipo NATURAL JOIN equipo_estadio
NATURAL JOIN estadio
WHERE condicion IN ('Excelente','Buena')
ORDER BY nombre_equipo
")->SQL_query1
View(SQL_query1)
dbGetQuery(conexion,
"
SELECT nombre_equipo AS Equipo, condicion AS Condicion
FROM equipo NATURAL JOIN equipo_estadio
NATURAL JOIN estadio
WHERE condicion IN ('Excelente','Buena')
ORDER BY nombre_equipo
")->SQL_query1
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo")
?n
estadio %>%
inner_join(equipo_estadio,by = "id_estadio") %>%
inner_join(equipo,by = "id_equipo") %>%
group_by(nombre_estadio) %>%  #OJO con la redundancia en los nombres de los estadios
summarise(Total=n()) %>%
dplyr::select(Estadio=nombre_estadio,Total)->R_query2
View(R_query2)
"
SELECT t1.nombre_estadio AS Estadio , count(t3.id_equipo) AS Total
FROM estadio t1 JOIN equipo_estadio t2 ON t1.id_estadio = t2.id_estadio
JOIN equipo         t3 ON t2.id_equipo = t3.id_equipo
GROUP BY t1.nombre_estadio
" -> aux
dbGetQuery(conexion,aux)->SQL_query2
View(SQL_query2)
estadio %>%
inner_join(equipo_estadio, by = "id_estadio") %>%
inner_join(equipo, by = "id_equipo") %>%
group_by(nombre_estadio) %>%  #OJO con la redundancia en los nombres de los estadios
summarise(Total = n()) %>%
filter(Total>1) %>%
dplyr::select(Estadio = nombre_estadio, Total) -> R_query2
View(R_query2)
estadio %>%
inner_join(equipo_estadio, by = "id_estadio") %>%
inner_join(equipo, by = "id_equipo") %>%
group_by(nombre_estadio) %>%  #OJO con la redundancia en los nombres de los estadios
summarise(Total = n()) %>%
filter(Total>1) %>%
dplyr::select(Estadio = nombre_estadio, Total) -> R_query2
View(R_query2)
# Con SQL
"
SELECT t1.nombre_estadio AS Estadio , count(t3.id_equipo) AS Total
FROM estadio t1 JOIN equipo_estadio t2 ON t1.id_estadio = t2.id_estadio
JOIN equipo         t3 ON t2.id_equipo = t3.id_equipo
GROUP BY t1.nombre_estadio
HAVING count(t3.id_equipo) >= 1
" -> aux
dbGetQuery(conexion,aux)->SQL_query2
# Con SQL
"
SELECT t1.nombre_estadio AS Estadio , count(t3.id_equipo) AS Total
FROM estadio t1 JOIN equipo_estadio t2 ON t1.id_estadio = t2.id_estadio
JOIN equipo         t3 ON t2.id_equipo = t3.id_equipo
GROUP BY t1.nombre_estadio
HAVING count(t3.id_equipo) > 1
" -> aux
dbGetQuery(conexion,aux)->SQL_query2
View(SQL_query2)
# Con R.
entrenador %>%
inner_join(equipo_entrenador) %>%
inner_join(equipo)
# Con R.
entrenador %>%
inner_join(equipo_entrenador) %>%
inner_join(equipo) %>%
View()
entrenador %>%
inner_join(equipo_entrenador) %>%
inner_join(equipo) %>%
mutate(Entrenador=paste(nombre_entrenador,apellido_entrenador))
entrenador %>%
inner_join(equipo_entrenador) %>%
inner_join(equipo) %>%
mutate(Entrenador=paste(nombre_entrenador,apellido_entrenador)) %>%
View()
entrenador %>%
inner_join(equipo_entrenador) %>%
inner_join(equipo) %>%
mutate(Entrenador=paste(nombre_entrenador,apellido_entrenador)) %>%
dplyr::select(Entrenador,Equipo=nombre_equipo) -> R_query3
View(R_query3)
R_query3
tbl_entrenador %>%
inner_join(tbl_equipo_entrenador) %>%
inner_join(tbl_equipo) %>%
mutate(Entrenador=paste(nombre_entrenador,apellido_entrenador)) %>%
dplyr::select(Entrenador,Equipo=nombre_equipo) -> dplyr_query3
show_query(dplyr_query3)
