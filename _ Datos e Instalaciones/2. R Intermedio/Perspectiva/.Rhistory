library(rgl)
library(magrittr)
setwd("~/Actuaría/Docencia/AMAT/R Intermedio/_Datos e Instalaciones/Perspectiva")
dat <- read.table("Perspectiva.txt") %>% as.matrix()
#View(dat)
plot(dat[,1],dat[,3])
plot3d(dat[,1],dat[,2],dat[,3])
# PCA
PCA <- princomp(dat)
PCA
# Tomamos los dos componentes más grandes.
plot(PCA$scores[,1:2], main = "PCA 2")
# Tomando todos los componentes, no vemos algo nuevo.
PCA_3 <- PCA$scores %>% as.data.frame()
plot3d(PCA_3[,1],PCA_3[,2],PCA_3[,3])
hc.complete <- hclust(dist(PCA_3), method = "complete")
# Se grafican
plot(hc.complete)
# Ponemos el corte a la altura requerida
rect.hclust(hc.complete, k = 2, border = 2:4)
# Hacemos grupos y graficamos
PCA_3$Grupo <- cutree(hc.complete,k = 2) %>% as.vector() %>% as.factor()
PCA_3$Grupo
plot3d(PCA_3[,1],PCA_3[,2],PCA_3[,3],col = PCA_3$Grupo)
# Así se ven
plot(G1[,1:2],col="blue")
points(G2[,1:2],col="red")
# Al aplicar componentes principales
PCA_G1 <- princomp(G1)
plot(PCA_G1$scores[,1:2],col="blue")
library(rgl)
library(magrittr)
setwd("~/Actuaría/Docencia/AMAT/R Intermedio/_Datos e Instalaciones/Perspectiva")
dat <- read.table("Perspectiva.txt") %>% as.matrix()
#View(dat)
plot(dat[,1],dat[,3])
plot3d(dat[,1],dat[,2],dat[,3])
# PCA
PCA <- princomp(dat)
# Tomamos los dos componentes más grandes.
plot(PCA$scores[,1:2], main = "PCA 2")
# Tomando todos los componentes, no vemos algo nuevo.
PCA_3 <- PCA$scores %>% as.data.frame()
hc.complete <- hclust(dist(PCA_3), method = "complete")
# Se grafican
plot(hc.complete)
# Ponemos el corte a la altura requerida
rect.hclust(hc.complete, k = 2, border = 2:4)
# Hacemos grupos y graficamos
PCA_3$Grupo <- cutree(hc.complete,k = 2) %>% as.vector() %>% as.factor()
plot3d(PCA_3[,1],PCA_3[,2],PCA_3[,3],col = PCA_3$Grupo)
# Separamos por diferentes grupos
G1 <- PCA_3[PCA_3$Grupo==1,-4]
G2 <- PCA_3[PCA_3$Grupo==2,-4]
# Así se ven
plot(G1[,1:2],col="blue")
points(G2[,1:2],col="red")
# Al aplicar componentes principales
PCA_G1 <- princomp(G1)
plot(PCA_G1$scores[,1:2],col="blue")
PCA_G2 <- princomp(G2)
points(PCA_G2$scores[,1:2],col="red")
PCA_2 <- prcomp(dat)
PCA_2
PCA
# PCA
(PCA <- princomp(dat))
(PCA_2 <- prcomp(dat))
PCA$sdev
PCA_2$sdev
PCA$loadings
PCA$scores
PCA_2$x
dim(PCA$scores)
dim(PCA_2$x)
PCA_2$rotation
PCA$loadings
PCA_2$rotation
PCA$center
PCA$scale
PCA$loadings
PCA_2$rotation
PCA$n.obs
PCA$call
PCA$loadings[1,1]
PCA$loadings[]
PCA_2$rotation
t_dat <- t(dat)
t_dat
dim(t_dat)
# PCA (Hay dos opciones populares)
(PCA <- princomp(t_dat))
(PCA_2 <- prcomp(t_dat))
PCA$sdev
PCA_2$sdev
# PCA (Hay dos opciones populares)
(PCA <- princomp(t_dat)) # No se puede :c
# Con el anterior (porque no corrió)
PCA$sdev
dim(PCA$scores)
PCA$loadings[]
# Con el actual
PCA_2$sdev
dim(PCA_2$x)
dim(PCA$scores)
PCA_2$rotation
PCA$loadings[]
dim(PCA_2$rotation)
dim(PCA_2$x)
PCA$loadings[]
dim(PCA$scores)
dim(PCA$scores)
dim(PCA$loadings[])
dim(PCA_2$x)
dim(PCA_2$rotation)
# PCA (Hay dos opciones populares)
(PCA <- princomp(dat))
(PCA_2 <- prcomp(dat))
PCA$sdev
PCA_2$sdev
dim(PCA$scores)
dim(PCA_2$x)
PCA$loadings[]
PCA_2$rotation
(PCA_2 <- prcomp(t_dat)) # ¿Sí se puede? :o
# Con el anterior (porque no corrió)
PCA$sdev
dim(PCA$scores)
dim(PCA$loadings[])
dim(PCA_2$rotation)
dim(PCA_2$x)
PCA_2$x
cov(dat)
cov(t_dat)
dim(cov(dat))
dim(cov(t_dat))
# PCA
eigenval <- eigen(cov(t_dat))$values/sum(eigen(cov(t_dat))$values)
eigenval
# Con el actual
PCA_2$sdev
sum(PCA_2$sdev)
sum(eigenval)
sum(PCA$sdev)
(PCA$sdev)
(PCA$scale)
summary(PCA)
summary(PCA_2)
dat <- read.table("Perspectiva.txt") %>% as.matrix()
#View(dat)
plot(dat[,1],dat[,3])
plot3d(dat[,1],dat[,2],dat[,3])
# PCA (Hay dos opciones populares)
(PCA <- princomp(dat))
(PCA_2 <- prcomp(dat))
summary(PCA)
summary(PCA_2)
PCA$sdev
PCA_2$sdev
dim(PCA$scores)
dim(PCA_2$x)
PCA$loadings[]
PCA_2$rotation
# Tomamos los dos componentes más grandes.
plot(PCA$scores[,1:2], main = "PCA 2")
# Tomando todos los componentes, no vemos algo nuevo.
PCA_3 <- PCA$scores %>% as.data.frame()
plot3d(PCA_3[,1],PCA_3[,2],PCA_3[,3])
hc.complete <- hclust(dist(PCA_3), method = "complete")
# Se grafican
plot(hc.complete)
# Ponemos el corte a la altura requerida
rect.hclust(hc.complete, k = 2, border = 2:4)
# Hacemos grupos y graficamos
PCA_3$Grupo <- cutree(hc.complete,k = 2) %>% as.vector() %>% as.factor()
# Separamos por diferentes grupos
G1 <- PCA_3[PCA_3$Grupo==1,-4]
G2 <- PCA_3[PCA_3$Grupo==2,-4]
# Así se ven
plot(G1[,1:2],col="blue")
points(G2[,1:2],col="red")
# Así se ven
plot(G1[,1:2],col="blue",xlim=c(-4,4))
points(G2[,1:2],col="red")
# Al aplicar componentes principales
PCA_G1 <- princomp(G1)
plot(PCA_G1$scores[,1:2],col="blue")
PCA_G2 <- princomp(G2)
points(PCA_G2$scores[,1:2],col="red")
t_dat <- t(dat)
dim(t_dat) # Más columnas que renglones (n<p)
# PCA (Hay dos opciones populares)
(PCA <- princomp(t_dat)) # No se puede :c
(PCA_2 <- prcomp(t_dat)) # ¿Sí se puede? :o
# Con el anterior (porque no corrió)
PCA$sdev
dim(PCA$scores)
dim(PCA$loadings[])
# Con el actual
PCA_2$sdev
dim(PCA_2$x)
dim(PCA_2$rotation)
dim(cov(dat))
dim(cov(t_dat))
# PCA
eigenval <- eigen(cov(t_dat))$values
eigenvec <- eigen(cov(t_dat))$vectors
summary(PCA_2)
eigenval
sum(eigenval)
eigenval[1:3]
summary(PCA_2)
eigenval[1:3]
sqrt(eigenval[1:3])
summary(PCA_2)
sqrt(eigenval[1:3])
sqrt(eigenval[1:3]) %>% round(4)
summary(PCA_2)
sqrt(eigenval[1:3]) %>% round(4)
data.frame(Edad=c(25,25),Altura=c(1.70,1.68),Peso=c(72,71))
datos <- data.frame(Edad=c(25,25),Altura=c(1.70,1.68),Peso=c(72,71))
plot3d(datos[,1],datos[,2],datos[,3])
plot3d(datos[,1],datos[,2],datos[,3],col = "red")
plot3d(datos[,1],datos[,2],datos[,3],col = "red",size = 3)
plot3d(datos[,1],datos[,2],datos[,3],col = "red")
points(PCA_G2$scores[,1:2],col="red")
plot3d(PCA_3[,1],PCA_3[,2],PCA_3[,3],col = PCA_3$Grupo)
plot3d(datos[,1],datos[,2],datos[,3],col = "red",size = 10)
(brl <- prcomp(datos))
brl$x
summary(PCA)
summary(brl)
plot(brl$x)
brl$x
plot(brl$x[,1])
plot(brl$x[,1],y=1)
plot(brl$x[,1],y=c(1,1))
plot(brl$x)
plot(brl$x[,1],y=c(1,1))
